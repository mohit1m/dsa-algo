/* 
TC: O(m*n)
SC: O(n) only for ans

https://leetcode.com/problems/spiral-matrix/description/
*/
public class Solution {
    public IList<int> SpiralOrder(int[][] matrix) {
        IList<int> ans = new List<int>();
        int m = matrix.Length;
        int n = matrix[0].Length;
        int total  = m*n;
        int count = 0;
        int left = 0; 
        int right = n-1;
        int top = 0;
        int bottom = m-1;

        while(count<total) {
            for(int i=left; i<=right && count<total; i++) {
                ans.Add(matrix[top][i]);
                count++;
            }
            top++;

            for(int i=top; i<=bottom && count<total; i++) {
                ans.Add(matrix[i][right]);
                count++;
            }
            right--;

            for(int i=right; i>=left && count<total; i--) {
                ans.Add(matrix[bottom][i]);
                count++;
            }
            bottom--;

            for(int i=bottom; i>=top && count<total; i--) {
                ans.Add(matrix[i][left]);
                count++;
            }
            left++;        
        }
        return ans;
    }    
}
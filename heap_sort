

//User function Template for C#

class Solution
{
    public void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i]= arr[j];
        arr[j] = temp;
    }
    //Heapify function to maintain heap property.
    public void heapify(int[] arr, int n, int i)
    {
        // Your Code Here
        int largestIndex = i;
        int leftIndex = 2*i+1;
        int rightIndex = 2*i+2;
        if(leftIndex<n && arr[leftIndex] > arr[largestIndex]) {
            largestIndex = leftIndex;
        }
        if(rightIndex<n && arr[rightIndex] > arr[largestIndex]) {
            largestIndex = rightIndex;
        }
        if(largestIndex!=i) {
            swap(arr, i, largestIndex);
            heapify(arr, n, largestIndex);
        }
    }

    //Function to build a Heap from array.
    public void buildHeap(int[] arr, int n)
    {
        // Your Code Here
        for(int i=n/2-1; i>=0; i--) {
            heapify(arr, n, i);
        }
    }


    //Function to sort an array using Heap Sort.
    public void heapSort(int[] arr, int n)
    {
        //code here
        //Build Heap
        buildHeap(arr, n);
        for(int i=n-1;i>=0; i--) {
            //Swap 1st and ith element
            swap(arr, 0, i);
            // Heapify rest of the heap
            heapify(arr, i, 0);
        }
        
    }
}

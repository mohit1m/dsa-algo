/*
/*
https://leetcode.com/problems/search-a-2d-matrix/submissions/

TC: O(logn)
SC: O(1)
*/
public class Solution {
    public bool SearchMatrix(int[][] matrix, int target) {
        int rows = matrix.Length;
        int cols = matrix[0].Length;
        int top = 0;
        int bottom = rows-1;
        int row = 0;
        while(top <= bottom) {
            row = top + (bottom-top) /2;
            if(target > matrix[row][cols-1]) {
                top = row + 1;
            } 
            else if(target < matrix[row][0]) {
                bottom = row-1;
            } else {
                break;
            }
        }

        if(!(top <= bottom)) {
            return false;
        }

        int start = 0;
        int end = cols - 1;
        while(start  <= end) {
            int mid = start + (end-start)/2;
            if(target == matrix[row][mid]) {
                return true;
            } else if(target > matrix[row][mid]) {
                start = mid + 1;
*            } else {
                end = mid - 1;
            }
        }
        return false;        
    }
}
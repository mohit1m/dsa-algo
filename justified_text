class Solution {
    public List<string> fullJustify(List<string> A, int B) {       
        List<string> result = new();
        if(A.Count == 0) {
           return result;
        }
        List<string> line = new();
        int lineLength = 0;       
        for(int i=0; i<A.Count; i++) {            
            // Check if line length exceeds 
            if(lineLength + line.Count + A[i].Length > B) {
                int wordCount = line.Count;
                int spaces = (B-lineLength) / Math.Max(1, wordCount-1);
                int extraSpaces =  (B-lineLength) % Math.Max(1, wordCount-1);                
                for(int j=0; j<Math.Max(1, wordCount-1); j++) {
                    line[j] += new string(' ', spaces);
                    if(extraSpaces > 0) {
                        line[j] += " ";
                        extraSpaces--;
                    }
                }
                result.Add(String.Join("", line.ToArray()));   
                line = new();
                lineLength = 0;          
            }            
            line.Add(A[i]);
            lineLength += A[i].Length;
        }
        
       
        
        // Handle last line
        // Last line has 1 space between word
        
        string lastLine =  String.Join(" ", line.ToArray());
        //Trailing spaces
        int trailingSpaces = B - (lastLine.Length);
        lastLine += new String(' ',trailingSpaces);
        result.Add(lastLine);
        return result;
    }
}

/*
TC:  O(k), where 'k' is the number of set bits (1s) in the binary representation of n
SC: O(1)

https://leetcode.com/problems/number-of-1-bits/description/
*/
public class Solution {
    public int HammingWeight(uint n) {
        int count = 0; 
        while(n != 0) {
            n= n&(n-1);
            count++;
        }
        return count;  
    }

    /* public int HammingWeight(uint n) {
        int count = 0;
        while(n != 0) {
            count += (int)(n%2);
            n = n>>1;
        }
        return count;        
    }*/    
}
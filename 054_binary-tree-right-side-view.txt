/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
/*
TC: O(n)
SC: O(H)
https://leetcode.com/problems/binary-tree-right-side-view/
*/
public class Solution {
    private void Solve(TreeNode root, IList<int> result, int level) {
        if(root == null) {
            return;
        }
        if(result.Count == level) {
            result.Add(root.val);
        }
        Solve(root.right, result, level+1);
        Solve(root.left, result, level+1);
    }
    public IList<int> RightSideView(TreeNode root) {
        IList<int> result = new List<int>();
        Solve(root, result, 0);
        return result;        
    }
}
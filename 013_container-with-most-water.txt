/*
Time Complexity: O(n)
Space complexity: O(1)

https://leetcode.com/problems/container-with-most-water/
*/
public class Solution {
    public int MaxArea(int[] height) {
        int ans=0;
        int n= height.Length;
        int left=0;
        int right= n-1;
        while(left < right) {
            int area = (right - left) * Math.Min(height[left], height[right]);
            ans = Math.Max(ans,area);
            if(height[left] < height[right]) {
                left++;
            }
            else {
                right--;
            }
        }
        return ans;
    }
}

/*
Time Complexity: O(m+n)
https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/
*/
public class Solution {
    public int StrStr(string haystack, string needle) {
        int n = needle.Length;
        // LPS for needle
        int[] lps = new int[n];
        // We don't consider full prefi suffix as string so 0
        lps[0] = 0;
        int prevLps = 0;
        int i = 1;
        while(i<n) {
            if(needle[prevLps] == needle[i]) {                
                lps[i] = 1 + prevLps;
                prevLps++;
                i++;
            } else if(prevLps == 0) {
                lps[i] = 0;
                i++;
            } else {
                // Don't increment i;
                prevLps = lps[prevLps-1];
            }
        }

        i=0;
        int j=0;
        while(i < haystack.Length) {
            if(haystack[i] == needle[j]) {
                i++;
                j++;
            } else if(j == 0) {
                i++; 
            } else {
                // Don't increment i;
                j = lps[j-1];
            }
            if(j == needle.Length) {
                return i - needle.Length;
            }
        }
        return -1;
    }        
}

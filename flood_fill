public class Solution {
    public void Solve(int[][] image, int sr, int sc, int color, int rows, int cols, int prevColor) {
        if(sr<0 || sr>=rows || sc<0 || sc>=cols || image[sr][sc]!=prevColor) {
            return;
        }

        prevColor = image[sr][sc];
        image[sr][sc] = color;
        Solve(image, sr-1, sc, color, rows, cols, prevColor);
        Solve(image, sr+1, sc, color, rows, cols, prevColor);
        Solve(image, sr, sc-1, color, rows, cols, prevColor);
        Solve(image, sr, sc+1, color, rows, cols, prevColor);
    }

    public int[][] FloodFill(int[][] image, int sr, int sc, int color) {
        if(image[sr][sc]==color) {
            return image;
        }
        int rows = image.Length;
        int cols = image[0].Length;
        // int[][] result = new int[rows][cols];
        Solve(image, sr, sc, color, rows, cols, image[sr][sc]);
        return image;
    }
}

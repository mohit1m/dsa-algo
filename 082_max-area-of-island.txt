/*
TC: O(m*n)
SC: O(m*n)

https://leetcode.com/problems/max-area-of-island/submissions/
*/

public class Solution {
    private int DFS(int[][] grid, int rows, int cols, int row, int col, HashSet<(int,int)> visited) {
        if(row<0 || row>=rows || col<0 || col>=cols || visited.Contains((row, col)) || grid[row][col] == 0) {
            return 0;
        }
        visited.Add((row,col));
        return 1 +
        DFS(grid, rows, cols, row+1, col, visited) +
        DFS(grid, rows, cols, row-1, col, visited) +
        DFS(grid, rows, cols, row, col+1, visited) +
        DFS(grid, rows, cols, row, col-1,visited);
    }
    public int MaxAreaOfIsland(int[][] grid) {
        int rows = grid.Length;
        int cols = grid[0].Length;
        int result = 0;
        HashSet<(int,int)> visited = new();
        for(int i=0; i<rows; i++) {
            for(int j=0; j<cols; j++) {
                if(!visited.Contains((i,j)) && grid[i][j]==1) {
                result = Math.Max(result, DFS(grid, rows, cols, i, j, visited));
                }
            }
        }
        return result;        
    }
}
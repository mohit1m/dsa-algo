/*
TC: O(n)
SC: O(1)

Floyd's Tortoise and Hare
https://leetcode.com/problems/find-the-duplicate-number/
*/
public class Solution {
    public int FindDuplicate(int[] nums) {
        int slow = nums[0], fast = nums[0];

        while(true) {
            slow = nums[slow];
            fast = nums[nums[fast]];
            if(slow == fast) {
                break;
            }
        }

        // As per the algo, fast is moved to the first element and moved one step at a time,
        // using slow1 to avoid confusion
        int slow1 = nums[0];
        while(slow != slow1) {
            slow = nums[slow];
            slow1 = nums[slow1];
        }
        return slow;
    }
}

class Solution {
    public int maximumGap(List<int> A) {
        List<int> Lmin = new List<int>(new int[A.Count]);
        List<int> Rmax = new List<int>(new int[A.Count]);
        
        Lmin[0] = A[0];
        for(int i=1; i<A.Count; i++) {
            Lmin[i]= Math.Min(Lmin[i-1], A[i]);
        }
        int n = A.Count;
        
        Rmax[n-1] = A[n-1];
        for(int i=n-2; i>=0 ; i--) {
            Rmax[i] = Math.Max(Rmax[i+1], A[i]);
        }
        
        int a = 0;
        int b = 0;
        int result = int.MinValue;
        while(a<Lmin.Count && b<Rmax.Count) {
            if(Lmin[a] <= Rmax[b]) {
                result = Math.Max(result, b-a);
                b++;
            } else {
                a++;
            }            
        }
        return result;
    }
}


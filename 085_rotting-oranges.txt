public int OrangesRotting(int[][] grid) {
        int rows = grid.Length;
        int cols = grid[0].Length;
        Queue<(int,int)> q = new();
        int freshCount = 0;
        int time = 0;
        for(int i=0; i<rows; i++) {
            for(int j=0; j<cols; j++) {
                if(grid[i][j] == 1) {
                    freshCount++;
                }
                if(grid[i][j] == 2) {
                    q.Enqueue((i,j));
                }
            }
        }

        int[,] directions = new int[,] {{0,1}, {0,-1},{1,0},{-1,0}};
        while(q.Count!=0 && freshCount>0) {
            int size = q.Count;
            for(int i=0; i<size;i++) {
                 var (row,col) = q.Dequeue();
                   for(int d=0; d<directions.GetLength(0); d++) {
                     int newRow = row + directions[d,0];
                     int newCol = col + directions[d,1];
                     if(newRow<0 || newRow>=rows || newCol<0 || newCol>=cols || grid[newRow][newCol]!=1) {
                     continue;
                 }
                 else {
                     grid[newRow][newCol] = 2;
                     q.Enqueue((newRow,newCol));
                     freshCount--;
                 }                
            }          
        }
        time++;
      }
    return freshCount==0 ? time : -1;
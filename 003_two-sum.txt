/*
Time Complexity: O(n)
Space Complexity: O(n)

https://leetcode.com/problems/two-sum/description/
*/
public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        Dictionary<int,int> hashMap = new Dictionary<int, int>();
        for(int i=0; i<nums.Length; i++) {
            int difference = target - nums[i];
            if(hashMap.ContainsKey(difference)) {
                return new int[] { hashMap[difference], i};
            }
            hashMap.Add(nums[i], i);
        }
        return null;
    }
}

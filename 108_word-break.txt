/*
TC: O(m*n)
SC: O(n)
https://leetcode.com/problems/word-break/description/
*/
public class Solution {
    public bool WordBreak(string s, IList<string> wordDict) {
        int n = s.Length;
        bool[] dp = new bool[n+1] ;
        dp[n] = true;
        for(int i = n-1; i>=0; i--) {
            foreach(var word in wordDict) {
                if(i+ word.Length <= n && s.Substring(i, word.Length) == word) {
                    dp[i] = dp[i + word.Length];
                    if(dp[i]) {
                        break;
                    }
                }

            }
        }
        return dp[0];
    }
}
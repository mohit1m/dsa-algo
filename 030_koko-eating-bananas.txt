/*
TC: O(logn)
SC: O(1)

https://leetcode.com/problems/koko-eating-bananas/
*/
public class Solution {
    public int MinEatingSpeed(int[] piles, int h) {
        int n = piles.Length;
        int start = 1;
        int end = piles.Max();
        int result = end;
        while(start <= end) {
            int mid = start+(end-start)/2;
            long hours = 0;
            for(int i=0; i<n; i++) {
                hours += (int)Math.Ceiling(piles[i]/ (double)mid);
            }            
            if(hours <= h) {
                result = Math.Min(result, mid);
                end = mid-1;
            } else {
                start = mid+1;                
            }             
        }
        return result;
    }
}

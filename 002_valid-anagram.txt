/*
Time Complexity: O(n)
Space Complexity: O(n)

Alternate Solution : Sorting
Time Complexity: O(nlogn)
Space Complexity: O(1)

https://leetcode.com/problems/valid-anagram/
*/
public class Solution {
    public bool IsAnagram(string s, string t) {        
        if(s.Length!=t.Length) {
            return false;
        }

        Dictionary<char,int> dict = new Dictionary<char,int>();
        for(int i=0;i<s.Length;i++) {
            if(dict.ContainsKey(s[i])) {
                dict[s[i]]++;
            } else {
                //dict.Add(s[i],1);
                dict[s[i]]=1;
            }
        }
        for(int i=0;i<t.Length;i++) {
            if(dict.ContainsKey(t[i])) {
               dict[t[i]]--;
            } else {
            return false;
            }
        }
        //foreach(KeyValuePair<char,int> kv in dict) {
        foreach(var kv in dict) {            
            if(kv.Value!=0) {
                return false;
            }
        }
        return true;
    }
}